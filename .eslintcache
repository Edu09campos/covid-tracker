[{"/Users/eduardocampos/Desktop/c_tracker/src/index.js":"1","/Users/eduardocampos/Desktop/c_tracker/src/components/index.js":"2","/Users/eduardocampos/Desktop/c_tracker/src/components/CountryPicker/countryPicker.jsx":"3","/Users/eduardocampos/Desktop/c_tracker/src/api/index.js":"4","/Users/eduardocampos/Desktop/c_tracker/src/components/Footer/footer.jsx":"5","/Users/eduardocampos/Desktop/c_tracker/src/App.jsx":"6","/Users/eduardocampos/Desktop/c_tracker/src/components/CountryPicker/CountryPicker.jsx":"7","/Users/eduardocampos/Desktop/c_tracker/src/components/InfoBox/InfoBox.jsx":"8","/Users/eduardocampos/Desktop/c_tracker/src/components/Map/Map.jsx":"9","/Users/eduardocampos/Desktop/c_tracker/src/components/Table/Table.jsx":"10","/Users/eduardocampos/Desktop/c_tracker/src/components/LineGraph/LineGraph.jsx":"11","/Users/eduardocampos/Desktop/c_tracker/src/utils/utils.jsx":"12"},{"size":145,"mtime":1611359241688,"results":"13","hashOfConfig":"14"},{"size":339,"mtime":1611794344149,"results":"15","hashOfConfig":"14"},{"size":2058,"mtime":1611538997412,"results":"16","hashOfConfig":"14"},{"size":1153,"mtime":1611867571571,"results":"17","hashOfConfig":"14"},{"size":619,"mtime":1611777586095,"results":"18","hashOfConfig":"14"},{"size":2690,"mtime":1611955767699,"results":"19","hashOfConfig":"14"},{"size":1790,"mtime":1611790639306,"results":"20","hashOfConfig":"14"},{"size":1343,"mtime":1611957177024,"results":"21","hashOfConfig":"14"},{"size":1092,"mtime":1611955010072,"results":"22","hashOfConfig":"14"},{"size":1070,"mtime":1611793987217,"results":"23","hashOfConfig":"14"},{"size":2059,"mtime":1611879747042,"results":"24","hashOfConfig":"14"},{"size":2174,"mtime":1611957198179,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"n1r1eo",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eduardocampos/Desktop/c_tracker/src/index.js",[],["54","55"],"/Users/eduardocampos/Desktop/c_tracker/src/components/index.js",[],"/Users/eduardocampos/Desktop/c_tracker/src/components/CountryPicker/countryPicker.jsx",[],["56","57"],"/Users/eduardocampos/Desktop/c_tracker/src/api/index.js",[],"/Users/eduardocampos/Desktop/c_tracker/src/components/Footer/footer.jsx",[],"/Users/eduardocampos/Desktop/c_tracker/src/App.jsx",["58","59"],"import React, { useState, useEffect } from \"react\";\nimport { Typography, Card, CardContent } from \"@material-ui/core\";\nimport \"leaflet/dist/leaflet.css\";\n\nimport {\n  CountryPicker,\n  InfoBox,\n  Map,\n  Table,\n  Footer,\n  LineGraph,\n} from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\n\nexport default function App() {\n  const [country, setCountry] = useState(\"\");\n  const [info, setInfo] = useState({});\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      setInfo(await fetchData(\"Global\"));\n    };\n\n    fetchApi();\n  }, []);\n\n  const handleCountryChange = async (countryName) => {\n    if (countryName === \"Global\") {\n      setCountry(\"\");\n    } else {\n      setCountry(countryName);\n    }\n\n    let data = await fetchData(countryName);\n    setInfo(data);\n\n    if (countryName !== \"Global\") {\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    } else {\n      setMapCenter([34.80746, -40.4796]);\n      setMapZoom(3);\n    }\n  };\n\n  return (\n    <>\n      <div className={styles.app}>\n        <div className={styles.left}>\n          <div className={styles.header}>\n            <h1>Covid-19 Tracker</h1>\n            <CountryPicker handleCountryChange={handleCountryChange} />\n          </div>\n\n          <div className={styles.stats}>\n            <InfoBox\n              active={casesType === \"cases\"}\n              onClick={(e) => setCasesType(\"cases\")}\n              title=\"Cases\"\n              cases={info.todayCases}\n              total={info.cases}\n              updated={info.updated}\n            />\n            <InfoBox\n              active={casesType === \"recovered\"}\n              onClick={(e) => setCasesType(\"recovered\")}\n              title=\"Recovered\"\n              cases={info.todayRecovered}\n              total={info.recovered}\n              updated={info.updated}\n            />\n            <InfoBox\n              active={casesType === \"deaths\"}\n              onClick={(e) => setCasesType(\"deaths\")}\n              title=\"Deaths\"\n              cases={info.todayDeaths}\n              total={info.deaths}\n              updated={info.updated}\n            />\n          </div>\n\n          <Map casesType={casesType} center={mapCenter} zoom={mapZoom} />\n        </div>\n        <Card className={styles.right}>\n          <CardContent>\n            <Table />\n            <LineGraph className={styles.graph} casesType={casesType} />\n          </CardContent>\n        </Card>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","/Users/eduardocampos/Desktop/c_tracker/src/components/CountryPicker/CountryPicker.jsx",[],"/Users/eduardocampos/Desktop/c_tracker/src/components/InfoBox/InfoBox.jsx",[],"/Users/eduardocampos/Desktop/c_tracker/src/components/Map/Map.jsx",[],"/Users/eduardocampos/Desktop/c_tracker/src/components/Table/Table.jsx",[],"/Users/eduardocampos/Desktop/c_tracker/src/components/LineGraph/LineGraph.jsx",["60"],"import React, { useEffect, useState } from \"react\";\nimport { Typography, Divider } from \"@material-ui/core\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nimport styles from \"./LineGraph.module.css\";\nimport { fetchDailyRate } from \"../../api\";\nimport { buildChartData } from \"../../utils/utils\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst casesTypeColors = {\n  cases: \"#cc1034\",\n  recovered: \"#7dd71d\",\n  deaths: \"#ff6c47\",\n};\n\nexport default function LineGraph({ casesType }) {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      let data = await fetchDailyRate();\n      const chartData = buildChartData(data, casesType);\n      setData(chartData);\n    };\n\n    fetchApi();\n  }, [casesType]);\n\n  return (\n    <div className={styles.graph}>\n      <Divider light />\n      <Typography gutterBottom variant=\"h6\" className={styles.title}>\n        Worldwide new {casesType}\n      </Typography>\n      {data?.length > 0 && (\n        <Line\n          maintainAspectRatio\n          responsive\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n","/Users/eduardocampos/Desktop/c_tracker/src/utils/utils.jsx",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":20},{"ruleId":"67","severity":1,"message":"71","line":17,"column":10,"nodeType":"69","messageId":"70","endLine":17,"endColumn":17},{"ruleId":"67","severity":1,"message":"72","line":54,"column":7,"nodeType":"69","messageId":"70","endLine":54,"endColumn":22},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'country' is assigned a value but never used.","'casesTypeColors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]